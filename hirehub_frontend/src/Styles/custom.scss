// ---------------------------------------------
// üé® 1. Define Your Custom Colors with Shades
// ---------------------------------------------

$hirehub-colors: (
  "red": (
    100: #ffdfdd,
    200: #ffc4c0,
    300: #ff9b94,
    400: #ff6257,
    500: #ff3223,
    600: #ff1100,
    700: #d70e00,
    800: #b10f03,
    900: #92130a,
  ),
  "yellow": (
    100: #fffde7,
    200: #fff9c4,
    300: #fff59d,
    400: #fff176,
    500: #fbc02d,
    600: #f9a825,
    700: #f57f17,
    800: #ef6c00,
    900: #e65100,
  ),
  "charcoal": (
    100: #f5f5f5,
    200: #eeeeee,
    300: #e0e0e0,
    400: #bdbdbd,
    500: #9e9e9e,
    600: #757575,
    700: #616161,
    800: #424242,
    900: #212121,
  ),
  "blue": (
    100: #e3f2fd,
    200: #bbdefb,
    300: #90caf9,
    400: #64b5f6,
    500: #1976d2,
    600: #1565c0,
    700: #0d47a1,
    800: #0b3c91,
    900: #072d78,
  ),
  "green": (
    100: #e8f5e9,
    200: #c8e6c9,
    300: #a5d6a7,
    400: #81c784,
    500: #388e3c,
    600: #2e7d32,
    700: #1b5e20,
    800: #124d18,
    900: #0b3c10,
  ),
  "purple": (
    100: #f3e5f5,
    200: #e1bee7,
    300: #ce93d8,
    400: #ba68c8,
    500: #7b1fa2,
    600: #6a1b9a,
    700: #4a148c,
    800: #38006b,
    900: #24004a,
  ),
);

// ---------------------------------------------
// üõ† 2. Generate Utility Classes from Map
// ---------------------------------------------

@each $color-name, $shades in $hirehub-colors {
  @each $shade, $color-value in $shades {
    .text-#{$color-name}-#{$shade} {
      color: $color-value !important;
    }

    .bg-#{$color-name}-#{$shade} {
      background-color: $color-value !important;
    }

    .btn-#{$color-name}-#{$shade} {
      background-color: $color-value !important;
      color: #000 !important;

      // Hover: use next darker shade if available, else darken
      &:hover {
        $next-shade: $shade + 200;
        @if map-has-key($shades, $next-shade) {
          background-color: map-get($shades, $next-shade) !important;
        } @else {
          background-color: darken($color-value, 5%) !important;
        }
        color: #000 !important;
      }
    }

    .icon-#{$color-name}-#{$shade} {
      stroke: $color-value !important;
      // fill: $color-value !important;
      transition: stroke 0.2s ease-in-out, fill 0.2s ease-in-out;

      &:hover {
        $next-shade: $shade + 100;
        @if map-has-key($shades, $next-shade) {
          stroke: map-get($shades, $next-shade) !important;
          fill: map-get($shades, $next-shade) !important;
        } @else {
          stroke: darken($color-value, 8%) !important;
          fill: darken($color-value, 8%) !important;
        }
      }
    }

    .border-#{$color-name}-#{$shade} {
      border: 1px solid $color-value !important;
    }
  }
}

// ---------------------------------------------
// üñºÔ∏è Image Styling
// ---------------------------------------------

.company-logo {
  height: 100px;
  object-fit: contain;
  background-color: transparent;
  transition: background-color 0.3s ease;
  cursor: pointer;
}

// ---------------------------------------------
// üìÑ Job Card Styling
// ---------------------------------------------

.job-card {
  transition: all 0.3s ease;
  border: 1px solid #000;
}

.job-card:hover {
  background-color: #d8f6f6;
  box-shadow: 0 8px 20px rgba(40, 44, 52, 0.3);
  cursor: pointer;
}

.job-card img {
  transition: transform 0.3s ease;
}

.job-card:hover img {
  transform: scale(1.05);
}

.icon-btn {
  width: 30px;
  height: 30px;
}

.text-justify {
  text-align: justify !important;
}

// ---------------------------------------------
// ‚ú® RichText Editor Active Style
// ---------------------------------------------

button[aria-pressed="true"].mantine-RichTextEditor-control {
  background-color: #fde047 !important; // yellow-300
  color: #000 !important;
  border-color: #facc15 !important; // yellow-400
}

// ---------------------------------------------
// üì¶ 3. Import Bootstrap (must be last)
// ---------------------------------------------

@import "bootstrap";
